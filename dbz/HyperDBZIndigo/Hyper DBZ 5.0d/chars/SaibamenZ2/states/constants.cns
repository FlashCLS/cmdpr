;=============================================
; CNS File for Saibamen Z2 by Team Z2
; Constants file
;=============================================

[Data]
life		= 150
power		= 1000
attack		= 100
defence		= 100
fall.defence_up	= 50
liedown.time	= 10
airjuggle		= 1		; yes, that "many" juggle points
sparkno		= 2	
guard.sparkno	= -1
KO.echo		= 0	
;volume		= 150
IntPersistIndex	= 58
FloatPersistIndex	= 40

;--	--	--	--	--	--	--

[Size]
xscale		= 1		;Horizontal scaling factor.
yscale		= 1		;Vertical scaling factor.
ground.back	= 13		;Player width (back, ground)
ground.front	= 13		;Player width (front, ground)
air.back		= 10		;Player width (back, air)
air.front		= 10		;Player width (front, air)
height		= 30		;Height of player (for opponent to jump over)
attack.dist	= 160		;Default attack distance
proj.attack.dist	= 90		;Default attack distance for projectiles
proj.doscale	= 0		;Set to 1 to scale projectiles too   
head.pos		= 15,-40		;Approximate position of head
mid.pos		= 0,-28		;Approximate position of midsection
shadowoffset	= 0		;Number of pixels to vertically offset the shadow
draw.offset	= 0,0		;Player drawing offset in pixels (x, y)

;--	--	--	--	--	--	--

[Velocity]
walk.fwd		= 3		;Walk forward
walk.back		= -3		;Walk backward
run.fwd		= 6.2, 0		;Run forward (x, y)
run.back		= -5,-6.7		;Hop backward (x, y)
jump.neu		= 0,-13		;Neutral jumping velocity (x, y)
jump.back		= -4		;Jump back Speed (x, y)
jump.fwd		= 4		;Jump forward Speed (x, y)
runjump.back	= -2.55,-8.1	;Running jump speeds (opt)
runjump.fwd	= 4,-8.1
airjump.neu	= 0,-13.13
airjump.back	= -3.55		;Air jump speeds (opt)
airjump.fwd	= 3.5
air.gethit.groundrecover	= -.15,-3.5	;Velocity for ground recovery state (x, y) **1.0**
air.gethit.airrecover.mul	= .5,.2		;Multiplier for air recovery velocity (x, y) **1.0**
air.gethit.airrecover.add	= 0,-4.5		;Velocity offset for air recovery (x, y) **1.0**
air.gethit.airrecover.back	= -1		;Extra x-velocity for holding back during air recovery **1.0**
air.gethit.airrecover.fwd	= 0		;Extra x-velocity for holding forward during air recovery **1.0**
air.gethit.airrecover.up	= -2		;Extra y-velocity for holding up during air recovery **1.0**
air.gethit.airrecover.down	= 1.5		;Extra y-velocity for holding down during air recovery **1.0**

[Movement]
airjump.num	= 0			;Number of air jumps allowed (opt)
airjump.height	= 35			;Minimum distance from ground before you can air jump (opt)
yaccel		= .79			;POTS was right, elecbyte's default gravity was floaty as fuck so I've changed that here
stand.friction	= .85			;Friction coefficient when standing
crouch.friction	= .82			;Friction coefficient when crouching
stand.friction.threshold	= 2		;If player's speed drops below this threshold while standing, stop his movement **1.0**
crouch.friction.threshold	= .05		;If player's speed drops below this threshold while crouching, stop his movement **1.0**
air.gethit.groundlevel	= 16		;Y-position at which a falling player is considered to hit the ground **1.0**
air.gethit.groundrecover.ground.threshold	= -20	;Y-position below which falling player can use the recovery command **1.0**
air.gethit.groundrecover.groundlevel		= 10	;Y-position at which player in the ground recovery state touches the ground **1.0**
air.gethit.airrecover.threshold		= -1	;Y-velocity above which player may use the air recovery command **1.0**
air.gethit.airrecover.yaccel	= .35		;Vertical acceleration for player in the air recovery state **1.0**
air.gethit.trip.groundlevel	= 15		;Y-position at which player in the tripped state touches the ground **1.0**
down.bounce.offset		= 0, 20		;Offset for player bouncing off the ground (x, y) **1.0**
down.bounce.yaccel		= .4               ;Vertical acceleration for player bouncing off the ground **1.0**
down.bounce.groundlevel	= 12		;Y-position at which player bouncing off the ground touches the ground again **1.0**
down.friction.threshold	= .05		;If the player's speed drops below this threshold while lying down, stop his movement **1.0**


[Quotes]

victory0		= ":D"
victory1		= ">:D"
victory2		= ":P"
victory3		= "CIAAAAA"
victory4		= "*annoying noises*"
victory5		= "Saibamen Laugh As You Eternally Rage"
victory6		= "DADDY VEGETA WILL BE PROUD"
victory7		= "UNCLE NAPPA WILL BE PROUD"


;---------------------------------------------------------------------------
; Variable usage:
; This is a record of the variables that KFM uses. Keeping a record of your
; variable usage helps you avoid careless mistakes later.
; var(2)  - Used in Kung Fu Throw (state 800) to remember if fwd was being
;           held (remembered from state 800 through state 810).
;           Also used in jump init state (state 40) for jump attack buffer
; var(6) - superpause check
; var(8) - throw limiter
; var(9)  - Used in kfm.cmd for combo condition (updated every tick)
; var(21) - (movehit = 1) time, checked by the e.g. wallbounces
; var(30) - first attack?
; var(31) - countah
; var(32) = wallbaounce sound
; var(33) = wallbaounce sound
; fvar(20) = mana
; var(37) - Saiba number
; var(38) = strikercount
; var(39) = bonecount
; var(40) = air hit?
; var(43) - misc flags
; 43.1 - used an iceball in a combo?
; 43.2 - used a shower
; 43.3 - used a clone
; var(48) - did the AI use the taunt?
; var(49) - denotes if a 1.0/post1.0 mugen def file is used
; var(50) - used by the AI
; var(51) - used by the AI
; var(55) - AIlevel simpilfer
; var(56) - used by the XOR-ed commands method to detect recent custom states.
; var(57) - the GameTime variable, required by the helper and XOR methods.
; var(58) - the primary AI variable.
; var(59) - score itself
; var(12) - used by Vans's cornerpush system
; var(17) - used by the push
; fvar(5) - cornerpush?
; fvar(6) - cornerpush?
; fvar(13) - proration





;---------------------- Integer variable list ----------------------

; var(0):= 1, 3000, 3010, 3011, 3012
; var(1):= 9741, 9742
; var(2):= 40, 9741, 9742
; var(3):= 9741, 9742
; var(4):= 9741, 9742
; var(5):= 2006
; var(6):= -2, 2000, 9742, -2
; var(7):= 9742
; var(8):= -2, 9742, -2
; var(9):= 9741, 9742, -1
;var(10):= 9742, -1
;var(11):= 110, 110, 3012
;var(12):= -2, -2
;var(17):= -2, -2
;var(20):= 2006
;var(21):= -2, -2
;var(30):= -2, -2
;var(31):= -2, -2
;var(37):= 110, 110, -3
;var(40):= 192, 181, 192, 200, 220, 400, 410
;var(48):= 195
;var(49):= -2, -2
;var(50):= -2, -2
;var(51):= -2, -2
;var(52):= -1
;var(53):= 3010, -3, -1
;var(55):= 110, -2, 110, -2
;var(58):= -2, 9741, 9742, -2

;---------------------- Float variable list ----------------------

; fvar(0):= 2006, 3012
; fvar(1):= 3012
; fvar(2):= 3012
; fvar(6):= -2, -2
;fvar(13):= -2, 200, 220, 400, 410, -2
;fvar(20):= 2006
;fvar(33):= 444
;fvar(34):= 444
